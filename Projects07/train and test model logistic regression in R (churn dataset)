library(caret)
library(tidyverse)
## read churn.csv
churn <- read.csv("churn.csv")

#preview
head(churn)
view(churn)


## 1. spit data
n <- nrow(churn)
train_id <- sample(1:n, 0.8*n)
train_data <- churn[train_id, ]
test_data <- churn[-train_id, ]
## check nrows train_data and test_data
nrow(train_data)
nrow(test_data)

## build function
train_test_split <- function(data) {
  set.seed(42)
  n <- nrow(churn)
  train_id <- sample(1:n, 0.8*n)
  train_data <- churn[train_id, ]
  test_data <- churn[-train_id, ]
  return(list(train_data, test_data) ) 
}

## print train_test_split 
train_test_split(churn)

## call function
prep_data <- train_test_split(churn)
## check prep_data
prep_data[[1]]
prep_data[[2]]

## 2.train model
set.seed(42)
ctrl <- trainControl(method = "cv", 
                     number = 5)

model <- train(churn ~ .,
                   data = prep_data[[1]],
                   method = "glm",
                   trControl = ctrl)

## print model
model

## 3. score model
pred_churn_glm <- predict(model, newdata = prep_data[[2]])

## print pred_churn_glm
pred_churn_glm

## 4. evaluate model
actual_churn <- prep_data[[2]]$churn

## print actual_churn
actual_churn

##find error values 
mean(pred_churn_glm == actual_churn)
